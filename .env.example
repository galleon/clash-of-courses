# BRS Prototype Environment Configuration
# Copy this file to .env and configure your preferred AI service

# === AI SERVICE CONFIGURATION ===

# Option 1: OpenAI API (Recommended - Best Function Calling Support)
OPENAI_API_KEY=your-openai-api-key-here
OPENAI_API_BASE=https://api.openai.com/v1
OPENAI_MODEL=gpt-3.5-turbo
# Alternative models: gpt-4, gpt-4-turbo (better but more expensive)

# Option 2: Ollama (Local AI - Free but requires local setup)
# First install Ollama: curl -fsSL https://ollama.ai/install.sh | sh
# Then pull a model: ollama pull gemma3:27b
# Uncomment these lines and comment out OpenAI config above:
# OPENAI_API_KEY=ollama
# OPENAI_API_BASE=http://host.docker.internal:11434/v1
# OPENAI_MODEL=gemma3:27b
# Alternative local models: llama3.2:latest, qwen2.5vl:latest

# === CORE APPLICATION SETTINGS ===

# Database Configuration (Do not change for Docker setup)
DATABASE_URL=postgresql://postgres:postgres@db:5432/brs_prototype_db

# API Configuration
API_BASE_URL=http://localhost:8000

# Frontend Configuration (Do not change for Docker setup)
VITE_API_BASE=http://localhost:8000

# === LOGGING CONFIGURATION ===
# Controls the verbosity of application logs
# Levels: DEBUG, INFO, WARNING, ERROR, CRITICAL
# - DEBUG: Shows all logs including detailed request/response tracking
# - INFO: Standard operational logs (recommended for development)
# - WARNING: Only warnings and errors (recommended for production)
# - ERROR: Only errors and critical issues
LOG_LEVEL=INFO

# Enable detailed logging for debugging (true/false)
# When enabled, shows comprehensive request/response details, function calls, and AI interactions
# Useful for debugging approval workflows and chatbot behavior
# WARNING: Can generate large log volumes - disable in production
ENABLE_DETAILED_LOGGING=false

# Development Configuration
DEBUG=true

# === NOTES ===
# - Without a valid AI configuration, chatbot features will be disabled
# - Students will see traditional form interface as fallback
# - Check http://localhost:8000/health to verify AI service status
# - Use 'docker-compose down -v && docker-compose up -d' to reset database
